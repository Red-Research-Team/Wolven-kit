name: WolvenKit-Nightly
on:
  schedule:
    - cron: "0 12 * * *"
  workflow_dispatch:

jobs:
  nightly-wkit-win:
    runs-on: windows-latest

    steps:
    - name: checkout
      uses: actions/checkout@v2
    - name: Setup .NET Core
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: 5.0.100
        
    - name: dotnet clean
      run: dotnet clean ./WolvenKit.sln --configuration Release && dotnet nuget locals all --clear
    - name: dotnet restore
      run: dotnet restore ./WolvenKit.sln 

    - name: dotnet publish WolvenKit
      run: dotnet publish ./WolvenKit/WolvenKit.UI.csproj -o publish/nightly --no-self-contained --no-restore -r win-x64 -c Release -f net5.0-windows

    - name: Upload a Build Artifact
      uses: actions/upload-artifact@v2
      with:
        name: artifact_wkit-windows
        path: ./publish/nightly

    - name: zip
      uses: papeloto/action-zip@v1
      with:
        files: ./publish/nightly
        dest: wolvenkit.zip
    - name: Deploy Nightly
      uses: WebFreak001/deploy-nightly@v1.1.0
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        # find out this value by opening https://api.github.com/repos/<owner>/<repo>/releases in your browser and 
        # copy the full "upload_url" value including the {?name,label} part
        upload_url: https://uploads.github.com/repos/WolvenKit/WolvenKit/releases/11743470/assets{?name,label}
        # same as above (id can just be taken out the upload_url, it's used to find old releases)
        release_id: 11743470
        # path to archive to upload
        asset_path: wolvenkit.zip
        # name to upload the release as, use $$ to insert date (YYYYMMDD) and 6 letter commit hash
        asset_name: WolvenKit-Nightly-$$.zip
        # required by GitHub API
        asset_content_type: application/zip
