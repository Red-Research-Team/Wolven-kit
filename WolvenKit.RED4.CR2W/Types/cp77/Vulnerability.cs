using WolvenKit.RED4.CR2W.Reflection;
using FastMember;
using static WolvenKit.RED4.CR2W.Types.Enums;

namespace WolvenKit.RED4.CR2W.Types
{
	[REDMeta]
	public class Vulnerability : CVariable
	{
		private CName _vulnerabilityName;
		private CName _icon;
		private CBool _isActive;

		[Ordinal(0)] 
		[RED("vulnerabilityName")] 
		public CName VulnerabilityName
		{
			get
			{
				if (_vulnerabilityName == null)
				{
					_vulnerabilityName = (CName) CR2WTypeManager.Create("CName", "vulnerabilityName", cr2w, this);
				}
				return _vulnerabilityName;
			}
			set
			{
				if (_vulnerabilityName == value)
				{
					return;
				}
				_vulnerabilityName = value;
				PropertySet(this);
			}
		}

		[Ordinal(1)] 
		[RED("icon")] 
		public CName Icon
		{
			get
			{
				if (_icon == null)
				{
					_icon = (CName) CR2WTypeManager.Create("CName", "icon", cr2w, this);
				}
				return _icon;
			}
			set
			{
				if (_icon == value)
				{
					return;
				}
				_icon = value;
				PropertySet(this);
			}
		}

		[Ordinal(2)] 
		[RED("isActive")] 
		public CBool IsActive
		{
			get
			{
				if (_isActive == null)
				{
					_isActive = (CBool) CR2WTypeManager.Create("Bool", "isActive", cr2w, this);
				}
				return _isActive;
			}
			set
			{
				if (_isActive == value)
				{
					return;
				}
				_isActive = value;
				PropertySet(this);
			}
		}

		public Vulnerability(CR2WFile cr2w, CVariable parent, string name) : base(cr2w, parent, name) { }
	}
}
